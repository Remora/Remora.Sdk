<Project>
    <!-- Override packability -->
    <PropertyGroup>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <!-- Useful target information -->
    <Choose>
        <!-- Check for net461 and similar TFMs -->
        <When Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
            <PropertyGroup>
                <IsNET>false</IsNET>
                <IsNETCore>false</IsNETCore>
                <IsNETStandard>false</IsNETStandard>
                <IsNETFramework>true</IsNETFramework>
                <IsRunnableTarget>true</IsRunnableTarget>
            </PropertyGroup>
        </When>
        <!-- Check for net5.0 and similar TFMs -->
        <When Condition="'$(TargetFramework.TrimEnd(`0123456789.`))' == 'net'">
            <PropertyGroup>
                <IsNET>true</IsNET>
                <IsNETCore>false</IsNETCore>
                <IsNETStandard>false</IsNETStandard>
                <IsNETFramework>false</IsNETFramework>
                <IsRunnableTarget>true</IsRunnableTarget>
            </PropertyGroup>
        </When>
        <!-- Check for netcoreapp3.0 and similar TFMs -->
        <When Condition="'$(TargetFramework.TrimEnd(`0123456789.`))' == 'netcoreapp'">
            <PropertyGroup>
                <IsNET>false</IsNET>
                <IsNETCore>true</IsNETCore>
                <IsNETStandard>false</IsNETStandard>
                <IsNETFramework>false</IsNETFramework>
                <IsRunnableTarget>true</IsRunnableTarget>
            </PropertyGroup>
        </When>
        <!-- Check for netstandard2.0 and similar TFMs -->
        <When Condition="'$(TargetFramework.TrimEnd(`0123456789.`))' == 'netstandard'">
            <PropertyGroup>
                <IsNET>false</IsNET>
                <IsNETCore>false</IsNETCore>
                <IsNETStandard>true</IsNETStandard>
                <IsNETFramework>false</IsNETFramework>
                <IsRunnableTarget>false</IsRunnableTarget>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <IsNET>false</IsNET>
                <IsNETCore>false</IsNETCore>
                <IsNETStandard>false</IsNETStandard>
                <IsNETFramework>false</IsNETFramework>
                <IsRunnableTarget>false</IsRunnableTarget>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <!-- Suppress code coverage if requested -->
    <ItemGroup Condition="'$(ExcludeTestsFromCoverage)' == 'true'">
        <AssemblyAttribute Condition="$(IsNET) Or $(IsNETCore) Or '$(TargetFramework)' == 'netstandard2.1'" Include="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage" />
    </ItemGroup>

    <!-- Default packages -->
    <Choose>
        <When Condition="'$(ManagePackageVersionsCentrally)' == true">
            <ItemGroup>
                <PackageReference Include="Microsoft.NET.Test.Sdk" />
                <PackageReference Include="xunit" />
                <PackageReference Include="xunit.runner.visualstudio" />
                <PackageReference Include="xunit.runner.console" />
                <PackageReference Include="coverlet.collector">
                    <PrivateAssets>all</PrivateAssets>
                    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
                </PackageReference>
                <PackageReference Include="xunit.analyzers" PrivateAssets="all"/>
            </ItemGroup>
        </When>
        <Otherwise>
            <ItemGroup>
                <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />
                <PackageReference Include="xunit" Version="2.6.2" />
                <PackageReference Include="xunit.runner.visualstudio" Version="2.5.4" />
                <PackageReference Include="xunit.runner.console" Version="2.6.2" />
                <PackageReference Include="coverlet.collector" Version="6.0.0">
                    <PrivateAssets>all</PrivateAssets>
                    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
                </PackageReference>
                <PackageReference Include="xunit.analyzers" Version="1.6.0" PrivateAssets="all"/>
            </ItemGroup>
        </Otherwise>
    </Choose>

    <!-- Import at last to respect set properties -->
    <Import Project="Sdk.targets" Sdk="Remora.Sdk" Version="3.0.0" Condition="'$(_RemoraInSourceBuild)' != 'true'"/>
    <Import Project="../../Remora.Sdk/Sdk/Sdk.targets" Condition="'$(_RemoraInSourceBuild)' == 'true'"/>
</Project>
